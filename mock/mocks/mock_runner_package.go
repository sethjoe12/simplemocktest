// Code generated by MockGen. DO NOT EDIT.
// Source: mock/IUser (interfaces: Mako)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMako is a mock of Mako interface.
type MockMako struct {
	ctrl     *gomock.Controller
	recorder *MockMakoMockRecorder
}

// MockMakoMockRecorder is the mock recorder for MockMako.
type MockMakoMockRecorder struct {
	mock *MockMako
}

// NewMockMako creates a new mock instance.
func NewMockMako(ctrl *gomock.Controller) *MockMako {
	mock := &MockMako{ctrl: ctrl}
	mock.recorder = &MockMakoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMako) EXPECT() *MockMakoMockRecorder {
	return m.recorder
}

// AddUser mocks base method.
func (m *MockMako) AddUser(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUser", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddUser indicates an expected call of AddUser.
func (mr *MockMakoMockRecorder) AddUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUser", reflect.TypeOf((*MockMako)(nil).AddUser), arg0, arg1)
}
